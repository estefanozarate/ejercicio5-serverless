org: #nombre organizacion
service: api-comentario

provider:
  name: aws
  runtime: python3.12
  memorySize: 1024
  timeout: 30
  region: us-east-2
  iam:
    role: arn:aws:iam::447891120606:role/LabRole
  environment:
    TABLE_NAME: ${sls:stage}-t_comentarios
    INGEST_BUCKET_NAME: ${sls:stage}-ingesta-comentarios-bucket
    AWS_REGION: ${self:provider.region}

functions:
  crear:
    handler: comentario.lambda_handler
    events:
      - http:
          path: /comentario/crear
          method: post
          cors: true
          integration: lambda

resources:
  Resources:
    # DynamoDB Table
    TablaComentarios:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: tenant_id
            AttributeType: S
          - AttributeName: uuid
            AttributeType: S
        KeySchema:
          - AttributeName: tenant_id
            KeyType: HASH
          - AttributeName: uuid
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    # S3 Bucket for Ingesta por Stage
    IngestBucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: ${self:provider.environment.INGEST_BUCKET_NAME}
        AccessControl: PublicRead  # Hace los objetos dentro del bucket accesibles públicamente
        VersioningConfiguration:
          Status: Enabled
      DeletionPolicy: Retain  # Mantener el bucket y su contenido cuando se elimine la stack

    # Bucket Policy para permitir acceso público
    IngestBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref IngestBucket
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal: "*"
              Action: "s3:GetObject"
              Resource: "arn:aws:s3:::${self:provider.environment.INGEST_BUCKET_NAME}/*"

plugins:
  - serverless-python-requirements
